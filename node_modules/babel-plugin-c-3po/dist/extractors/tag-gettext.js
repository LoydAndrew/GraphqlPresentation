'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _babelTypes = require('babel-types');

var t = _interopRequireWildcard(_babelTypes);

var _babelTemplate = require('babel-template');

var _babelTemplate2 = _interopRequireDefault(_babelTemplate);

var _utils = require('../utils');

var _defaults = require('../defaults');

var _errors = require('../errors');

var _poHelpers = require('../po-helpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var MSGSTR = _defaults.PO_PRIMITIVES.MSGSTR;

var NAME = 'tag-gettext';

var validate = function validate(node) {
    var msgid = (0, _utils.template2Msgid)(node);
    if (!(0, _poHelpers.hasUsefulInfo)(msgid)) {
        throw new _errors.ValidationError('Can not translate \'' + (0, _utils.getQuasiStr)(node) + '\'');
    }
};

function match(node, context) {
    return t.isTaggedTemplateExpression(node) && node.tag.name === context.getAliasFor(NAME);
}

function resolveDefault(node, context) {
    var transStr = context.isDedent() ? (0, _utils.dedentStr)((0, _utils.getQuasiStr)(node)) : (0, _utils.getQuasiStr)(node);
    if ((0, _utils.hasExpressions)(node)) {
        return node.quasi;
    }
    return t.stringLiteral(transStr);
}

function resolve(node, translation) {
    var transStr = translation[MSGSTR][0];

    if ((0, _utils.hasExpressions)(node)) {
        var exprs = node.quasi.expressions.map(_utils.ast2Str);
        return (0, _babelTemplate2.default)((0, _utils.validateAndFormatMsgid)(transStr, exprs))();
    }
    return t.stringLiteral(transStr);
}

exports.default = { match: match, resolve: resolve, resolveDefault: resolveDefault, validate: validate, name: NAME, getMsgid: _utils.template2Msgid };